# Stage 0, "build-stage", based on Node.js, to build and compile the frontend
FROM node:10-alpine as build-stage
WORKDIR /app
RUN apk add --no-cache git
COPY package*.json /app/
RUN npm install
COPY ./ /app/
ARG configuration=prod
RUN npm run build -- --configuration $configuration

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:1.15-alpine
EXPOSE 8080
RUN rm -rf /usr/share/nginx/html/*
COPY --from=build-stage /app/dist/browser/ /usr/share/nginx/html
COPY --from=build-stage /app/nginx.conf /etc/nginx/conf.d/default.conf
CMD ["nginx", "-g", "daemon off;"]